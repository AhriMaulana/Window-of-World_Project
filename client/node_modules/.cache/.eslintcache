[{"D:\\Dumbways\\stage 2\\z-project\\client\\src\\index.js":"1","D:\\Dumbways\\stage 2\\z-project\\client\\src\\App.js":"2","D:\\Dumbways\\stage 2\\z-project\\client\\src\\landing-page.js":"3","D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\profile.js":"4","D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\home.js":"5","D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\bookdetail.js":"6","D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\readBook-Page.js":"7","D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\subscribe-page.js":"8","D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\home-subscribe.js":"9","D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\signin.js":"10","D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\signup.js":"11","D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\popup2.js":"12","D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\popup.js":"13","D:\\Dumbways\\stage 2\\z-project\\client\\src\\config\\api.js":"14","D:\\Dumbways\\stage 2\\z-project\\client\\src\\contex\\userContext.js":"15","D:\\Dumbways\\stage 2\\z-project\\client\\src\\reportWebVitals.js":"16","D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\transaction-page.js":"17","D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\add-book.js":"18"},{"size":480,"mtime":1648039600687,"results":"19","hashOfConfig":"20"},{"size":3102,"mtime":1648025392312,"results":"21","hashOfConfig":"20"},{"size":1287,"mtime":1647513031632,"results":"22","hashOfConfig":"20"},{"size":5122,"mtime":1647511187846,"results":"23","hashOfConfig":"20"},{"size":4194,"mtime":1647518215115,"results":"24","hashOfConfig":"20"},{"size":6004,"mtime":1647511187844,"results":"25","hashOfConfig":"20"},{"size":743,"mtime":1647511187847,"results":"26","hashOfConfig":"20"},{"size":5158,"mtime":1648212094208,"results":"27","hashOfConfig":"20"},{"size":3920,"mtime":1648436890955,"results":"28","hashOfConfig":"20"},{"size":3908,"mtime":1648008299387,"results":"29","hashOfConfig":"20"},{"size":3871,"mtime":1647819039886,"results":"30","hashOfConfig":"20"},{"size":661,"mtime":1647518039270,"results":"31","hashOfConfig":"20"},{"size":495,"mtime":1647517608113,"results":"32","hashOfConfig":"20"},{"size":414,"mtime":1647606374735,"results":"33","hashOfConfig":"20"},{"size":1223,"mtime":1648006475337,"results":"34","hashOfConfig":"20"},{"size":415,"mtime":1647951977585,"results":"35","hashOfConfig":"20"},{"size":7167,"mtime":1648025390242,"results":"36","hashOfConfig":"20"},{"size":6290,"mtime":1648046105166,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},"1r4ghi4",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"42"},"D:\\Dumbways\\stage 2\\z-project\\client\\src\\index.js",["98"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { UserContextProvider } from \"./contex/userContext\";\r\nimport { Router } from 'react-router-dom';\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    \r\n    <UserContextProvider>\r\n        <App />\r\n    </UserContextProvider>  \r\n    \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nreportWebVitals();",["99","100"],"D:\\Dumbways\\stage 2\\z-project\\client\\src\\App.js",["101","102","103","104","105","106","107"],[],"import { BrowserRouter as Router, Route, Routes, Link, useNavigate } from \"react-router-dom\";\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport { UserContext } from \"./contex/userContext\";\r\nimport Landing from './landing-page'\r\nimport HomePage from \"./components/home\";\r\nimport Subscribe from './components/subscribe-page'\r\nimport HomeSubscribe from \"./components/home-subscribe\";\r\nimport ProfilePage from \"./components/profile\";\r\nimport BookDetail from \"./components/bookdetail\";\r\nimport ReadPage from \"./components/readBook-Page\"\r\nimport TranscationPage from \"./components/transaction-page\"\r\nimport AddBookPage from \"./components/add-book\"\r\n\r\n// Get API config & setAuthToken here ...\r\nimport { API, setAuthToken } from './config/api'\r\n\r\n// Init token on axios every time the app is refreshed here ...\r\nif (localStorage.token) {\r\n    setAuthToken(localStorage.token)\r\n}\r\n\r\nfunction App() {\r\n\r\n    //let navigate = useNavigate();\r\n\r\n    // Init user context here ...\r\n    //const [state, dispatch] = useContext(UserContext)\r\n\r\n    // Redirect Auth here ...\r\n    //useEffect(() => {\r\n        //if (!state.isLogin) {\r\n            //navigate('/')\r\n        //} else {\r\n            //if (state.user.status === \"admin\") {\r\n                //navigate('/home')\r\n           // } else if (state.user.status === \"customer\") {\r\n                //navigate('/homesub')\r\n           // }\r\n       // }\r\n   // }, [state])\r\n\r\n    // Create function for check user token here ...\r\n   // const checkUser = async () => {\r\n        //try {\r\n            //const response = await API.get('/check-auth')\r\n\r\n            //if (response.status === 404) {\r\n                //return dispatch({\r\n                    //type: \"AUTH_ERROR\"\r\n                //})\r\n            //}\r\n\r\n           // let payload = response.data.data.user\r\n            //payload.token = localStorage.token\r\n\r\n            //return dispatch({\r\n               // type: \"USER_SUCCESS\",\r\n                //payload\r\n            //})\r\n        //} catch (error) {\r\n           // console.log(error);\r\n        //}\r\n    //}\r\n\r\n    // Call function check user with useEffect didMount here ...\r\n    //useEffect(() => {\r\n       // checkUser()\r\n   // }, [])\r\n\r\n    return (\r\n       \r\n        <Router>\r\n            <Routes>\r\n                <Route exact path=\"/\" element={<Landing />} />\r\n                <Route exact path=\"/home\" element={<HomePage />} />\r\n                <Route exact path=\"/homesub\" element={<HomeSubscribe />} />\r\n                <Route exact path=\"/subscribe\" element={<Subscribe />} />\r\n                <Route exact path=\"/profile\" element={<ProfilePage />} />\r\n                <Route exact path=\"/bookdetail\" element={<BookDetail />} />\r\n                <Route exact path=\"/addbook\" element={<ProfilePage />} />\r\n                <Route exact path=\"/readbook\" element={<ReadPage />} />\r\n                <Route exact path=\"/transaction\" element={<TranscationPage />} />\r\n                <Route exact path=\"/add-book\" element={<AddBookPage />} />\r\n            </Routes>\r\n        </Router>\r\n        \r\n\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n","D:\\Dumbways\\stage 2\\z-project\\client\\src\\landing-page.js",[],[],"D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\profile.js",[],[],"D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\home.js",[],[],"D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\bookdetail.js",[],[],"D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\readBook-Page.js",[],[],"D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\subscribe-page.js",["108"],[],"D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\home-subscribe.js",["109","110","111"],[],"D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\signin.js",["112","113","114"],[],"import styleCss from \"./popup.module.css\";\r\nimport React, {useState, useContext} from 'react';\r\nimport { Modal } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { API } from '../config/api'\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { UserContext } from \"../contex/userContext\";\r\n\r\n\r\nfunction LoginPop(props) {\r\n\r\n    const [state, dispatch] = useContext(UserContext);\r\n    const navigate = useNavigate();\r\n    const [message, setMessage] = useState(null);\r\n\r\n    // Store data with useState here ...\r\n    const [form, setForm] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const { email, password } = form;\r\n\r\n    const handleChange = (e) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n\r\n            // Create Configuration Content-type here ...\r\n            // Content-type: application/json\r\n            const config = {\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            }\r\n\r\n            // Convert form data to string here ...\r\n            const body = JSON.stringify(form)\r\n\r\n            // Insert data user for login process here ...\r\n            const response = await API.post('/login', body, config)\r\n            console.log(response.data.data)\r\n\r\n            // Checking process\r\n            if (response?.status == 200) {\r\n                //Send data to useContext\r\n                dispatch({\r\n                    type: \"LOGIN_SUCCESS\",\r\n                    payload: response.data.data,\r\n                });\r\n\r\n                // Status check\r\n                if (response.data.data.role == \"admin\") {\r\n                    navigate(\"/transaction\");\r\n                } else {\r\n                    navigate(\"/homesub\");\r\n                }\r\n\r\n                const alert = (\r\n                    <Alert variant=\"success\" className=\"py-1\">\r\n                        Login success\r\n                    </Alert>\r\n                );\r\n                setMessage(alert);\r\n            }\r\n        } catch (error) {\r\n            const alert = (\r\n                <Alert variant=\"danger\" className=\"py-1\">\r\n                    Login failed\r\n                </Alert>\r\n            );\r\n            setMessage(alert);\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            centered\r\n        >\r\n            <div>\r\n                {message && message}\r\n                <form onSubmit={handleSubmit} className={styleCss.form}>\r\n                    <div className={styleCss.formGroup}>\r\n                        <h1 className={styleCss.header}>Sign In</h1>\r\n                        <input\r\n                            className={styleCss.inputGroup}\r\n                            name=\"email\"\r\n                            value={email}\r\n                            placeholder=\"Email\"\r\n                            onChange={handleChange}\r\n                            type=\"email\"\r\n                        />\r\n\r\n                        <input\r\n                            className={styleCss.inputGroup1}\r\n                            name=\"password\"\r\n                            value={password}\r\n                            placeholder=\"Password\"\r\n                            onChange={handleChange}\r\n                            type=\"password\"\r\n                        />\r\n\r\n                        <button onClick={handleSubmit} className={styleCss.button} >Sign In</button>\r\n                        <p className={styleCss.text}>Don't have an account? Klik Here</p>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default LoginPop;","D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\signup.js",["115"],[],"import styleCss from \"./popup.module.css\";\r\nimport React from 'react';\r\nimport { Modal } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useState } from \"react\";\r\nimport { API } from '../config/api'\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nfunction SignUp(props) {\r\n\r\n    const [message, setMessage] = useState(null);\r\n    const [form, setForm] = useState({\r\n        fullName: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const { fullName, email, password } = form;\r\n\r\n    const handleChange = (e) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n\r\n            // Create Configuration Content-type here ...\r\n            // Content-type: application/json\r\n            const config = {\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            }\r\n\r\n            // Convert form data to string here ...\r\n            const body = JSON.stringify(form)\r\n\r\n            // Insert data user to database here ...\r\n            const response = await API.post('/register', body, config)\r\n            console.log(response);\r\n\r\n            // Notification\r\n            if (response.data.status == \"success...\") {\r\n                const alert = (\r\n                    <Alert variant=\"success\" className=\"py-1\">\r\n                        Success\r\n                    </Alert>\r\n                );\r\n                setMessage(alert);\r\n            } else {\r\n                const alert = (\r\n                    <Alert variant=\"danger\" className=\"py-1\">\r\n                        Failed\r\n                    </Alert>\r\n                );\r\n                setMessage(alert);\r\n            }\r\n        } catch (error) {\r\n            const alert = (\r\n                <Alert variant=\"danger\" className=\"py-1\">\r\n                    Failed\r\n                </Alert>\r\n            );\r\n            setMessage(alert);\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            centered\r\n        >\r\n            <div>\r\n                {message && message}\r\n                <form onSubmit={handleSubmit} className={styleCss.form}>\r\n                    <div className={styleCss.formGroup}>\r\n                        <h1 className={styleCss.header}>Sign Up</h1>\r\n                        <input\r\n                            className={styleCss.inputGroup}\r\n                            name=\"fullName\"\r\n                            value={fullName}\r\n                            placeholder=\"Full Name\"\r\n                            onChange={handleChange}\r\n                            type=\"text\"\r\n                        />\r\n\r\n                        <input\r\n                            className={styleCss.inputGroup1}\r\n                            name=\"email\"\r\n                            value={email}\r\n                            placeholder=\"Email\"\r\n                            onChange={handleChange}\r\n                            type=\"email\"\r\n                        />\r\n\r\n                        <input\r\n                            className={styleCss.inputGroup1}\r\n                            name=\"password\"\r\n                            value={password}\r\n                            placeholder=\"Password\"\r\n                            onChange={handleChange}\r\n                            type=\"password\"\r\n                        />\r\n\r\n\r\n                        <button type=\"submit\"  className={styleCss.button} >Sign In</button>\r\n                        <p className={styleCss.text}>Don't have an account? Klik Here</p>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default SignUp;","D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\popup2.js",[],[],"D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\popup.js",[],[],"D:\\Dumbways\\stage 2\\z-project\\client\\src\\config\\api.js",[],[],"D:\\Dumbways\\stage 2\\z-project\\client\\src\\contex\\userContext.js",[],[],"D:\\Dumbways\\stage 2\\z-project\\client\\src\\reportWebVitals.js",[],[],"D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\transaction-page.js",[],[],"D:\\Dumbways\\stage 2\\z-project\\client\\src\\components\\add-book.js",["116"],[],"import styleCss from \"./addbook.module.css\";\r\nimport React, { useState } from \"react\";\r\nimport { Popover, Overlay } from \"react-bootstrap\"\r\nimport { useRef } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { API } from '../config/api'\r\n\r\nfunction Tool() {\r\n    const [show, setShow] = useState(false);\r\n    const [target, setTarget] = useState(null);\r\n    const ref = useRef(null);\r\n\r\n    const handleClick = (event) => {\r\n        setShow(!show);\r\n        setTarget(event.target);\r\n    };\r\n\r\n    const addBook = useNavigate()\r\n    const Click = () => {\r\n        addBook(\"/transaction\")\r\n    }\r\n\r\n    const out = useNavigate()\r\n    const push = () => {\r\n        out(\"/\")\r\n    }\r\n\r\n    return (\r\n        <div ref={ref}>\r\n            <img onClick={handleClick} src=\"assets/ppadmin.png\" alt=\"logo\" />\r\n\r\n            <Overlay\r\n                show={show}\r\n                target={target}\r\n                placement=\"bottom\"\r\n                container={ref}\r\n                containerPadding={20}\r\n            >\r\n                <Popover id=\"popover-contained\">\r\n                    <Popover.Body>\r\n                        <div className={styleCss.add}>\r\n                            <img className={styleCss.book} src=\"assets/dropbook.png\" alt=\"logo\" />\r\n                            <p className={styleCss.addBook}>Edit Book</p>\r\n                        </div>\r\n\r\n                        <hr className={styleCss.garis} />\r\n\r\n                        <div onClick={push} className={styleCss.out}>\r\n                            <img className={styleCss.outDrop} src=\"assets/logoutdrop.png\" alt=\"logo\" />\r\n                            <p className={styleCss.log}>Logout</p>\r\n                        </div>\r\n\r\n                    </Popover.Body>\r\n                </Popover>\r\n            </Overlay>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AddBookPage() {\r\n    console.clear();\r\n    let navigate = useNavigate();\r\n    const [preview, setPreview] = useState(null); //For image preview\r\n\r\n    // Store data with useState here ...\r\n    const [form, setForm] = useState({\r\n        title: \"\",\r\n        publicationDate: \"\",\r\n        pages: \"\",\r\n        author: \"\",\r\n        isbn: \"\",\r\n        about: \"\",\r\n        bookFile: \"\"\r\n    })\r\n\r\n    // Handle change data on form\r\n    const handleChange = (e) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.type === \"file\" ? e.target.files : e.target.value,\r\n        });\r\n\r\n        // Create image url for preview\r\n        if (e.target.type === \"file\") {\r\n            let url = URL.createObjectURL(e.target.files[0]);\r\n            setPreview(url);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n\r\n            // Create Configuration Content-type here ...\r\n            // Content-type: multipart/form-data\r\n            const config = {\r\n                headers: {\r\n                    \"Content-type\": \"multipart/form-data\"\r\n                }\r\n            }\r\n\r\n            // Create store data with FormData as object here ...\r\n            const formData = new FormData()\r\n            formData.set(\"title\", form.title)\r\n            formData.set(\"publicationDate\", form.publicationDate)\r\n            formData.set(\"pages\", form.pages)\r\n            formData.set(\"author\", form.author)\r\n            formData.set(\"isbn\", form.isbn)\r\n            formData.set(\"about\", form.about)\r\n            formData.set(\"bookFile\", form.bookFile[0], form.bookFile[0].name)\r\n\r\n            // Insert product data here ...\r\n            const response = await API.post('/book', formData, config)\r\n\r\n            console.log(response);\r\n\r\n            navigate(\"/transaction\");\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const addBook = useNavigate()\r\n    const Click = () => {\r\n        addBook(\"/transaction\")\r\n    }\r\n\r\n    return (\r\n        <div className={styleCss.latar}>\r\n            <div className={styleCss.navbar}>\r\n\r\n                <div className={styleCss.kiri}>\r\n                    <img onClick={Click} className={styleCss.wow} src=\"assets/icon2.png\" alt=\"Logo\" />\r\n                </div>\r\n\r\n                <div className={styleCss.kanan}>\r\n                    <Tool />\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className={styleCss.formGroup}>\r\n                <p className={styleCss.head}>Add Book</p>\r\n\r\n                <form onSubmit={handleSubmit} className={styleCss.addForm}>\r\n                    {preview && (\r\n                        <div>\r\n                            <img\r\n                                src={preview}\r\n                                style={{\r\n                                    maxWidth: \"150px\",\r\n                                    maxHeight: \"150px\",\r\n                                    objectFit: \"cover\",\r\n                                }}\r\n                                alt=\"preview\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    <input type=\"text\" id=\"Title\" name=\"title\" onChange={handleChange} placeholder=\"Title\" className={styleCss.input} />\r\n                    <input type=\"text\" id=\"Publication Date\" name=\"publicationDate\" onChange={handleChange} placeholder=\"Publication Date\" className={styleCss.input} />\r\n                    <input type=\"text\" id=\"Page\" placeholder=\"Page\" name=\"pages\" onChange={handleChange} className={styleCss.input} />\r\n                    <input type=\"text\" id=\"Author\" placeholder=\"Author\" name=\"author\" onChange={handleChange} className={styleCss.input} />\r\n                    <input type=\"text\" id=\"Isbn\" placeholder=\"ISBN\" name=\"isbn\" onChange={handleChange} className={styleCss.input} />\r\n                    <textarea type=\"text\" id=\"About\" placeholder=\"About This Book\" name=\"about\" onChange={handleChange} className={styleCss.about} />\r\n                    <label className={styleCss.fileGroup}>Attache Book File</label>\r\n                    <input type=\"file\" id=\"acnu\" name=\"bookFile\" onChange={handleChange} className={styleCss.input1} />\r\n                    <button className={styleCss.tambah} type=\"submit\" id=\"acnu\" >Add Book</button>\r\n                </form>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBookPage;",{"ruleId":"117","severity":1,"message":"118","line":6,"column":10,"nodeType":"119","messageId":"120","endLine":6,"endColumn":16},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"117","severity":1,"message":"125","line":1,"column":50,"nodeType":"119","messageId":"120","endLine":1,"endColumn":54},{"ruleId":"117","severity":1,"message":"126","line":1,"column":56,"nodeType":"119","messageId":"120","endLine":1,"endColumn":67},{"ruleId":"117","severity":1,"message":"127","line":2,"column":10,"nodeType":"119","messageId":"120","endLine":2,"endColumn":20},{"ruleId":"117","severity":1,"message":"128","line":2,"column":22,"nodeType":"119","messageId":"120","endLine":2,"endColumn":30},{"ruleId":"117","severity":1,"message":"129","line":2,"column":32,"nodeType":"119","messageId":"120","endLine":2,"endColumn":41},{"ruleId":"117","severity":1,"message":"130","line":3,"column":10,"nodeType":"119","messageId":"120","endLine":3,"endColumn":21},{"ruleId":"117","severity":1,"message":"131","line":15,"column":10,"nodeType":"119","messageId":"120","endLine":15,"endColumn":13},{"ruleId":"117","severity":1,"message":"132","line":11,"column":12,"nodeType":"119","messageId":"120","endLine":11,"endColumn":19},{"ruleId":"117","severity":1,"message":"127","line":4,"column":10,"nodeType":"119","messageId":"120","endLine":4,"endColumn":20},{"ruleId":"117","severity":1,"message":"133","line":5,"column":10,"nodeType":"119","messageId":"120","endLine":5,"endColumn":19},{"ruleId":"134","severity":1,"message":"135","line":91,"column":90,"nodeType":"136","messageId":"137","endLine":91,"endColumn":108},{"ruleId":"117","severity":1,"message":"138","line":13,"column":12,"nodeType":"119","messageId":"120","endLine":13,"endColumn":17},{"ruleId":"139","severity":1,"message":"140","line":52,"column":34,"nodeType":"141","messageId":"142","endLine":52,"endColumn":36},{"ruleId":"139","severity":1,"message":"140","line":60,"column":45,"nodeType":"141","messageId":"142","endLine":60,"endColumn":47},{"ruleId":"139","severity":1,"message":"140","line":47,"column":38,"nodeType":"141","messageId":"142","endLine":47,"endColumn":40},{"ruleId":"117","severity":1,"message":"143","line":19,"column":11,"nodeType":"119","messageId":"120","endLine":19,"endColumn":16},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["144"],"no-negated-in-lhs",["145"],"'Link' is defined but never used.","'useNavigate' is defined but never used.","'useContext' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'UserContext' is defined but never used.","'API' is defined but never used.","'preview' is assigned a value but never used.","'Container' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'state' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Click' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]