{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dumbways\\\\stage 2\\\\z-project\\\\client\\\\src\\\\components\\\\signin.js\",\n    _s = $RefreshSig$();\n\nimport styleCss from \"./popup.module.css\";\nimport React, { useState, useContext } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useNavigate, useHistory } from 'react-router-dom';\nimport { API } from '../config/api';\nimport { Alert } from \"react-bootstrap\";\nimport { UserContext } from \"../contex/userContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginPop(props) {\n  _s();\n\n  let history = useHistory();\n  const [state, dispatch] = useContext(UserContext);\n  const [message, setMessage] = useState(null); // Store data with useState here ...\n\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const {\n    email,\n    password\n  } = form;\n\n  const handleChange = e => {\n    setForm({ ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async e => {\n    try {\n      e.preventDefault(); // Create Configuration Content-type here ...\n      // Content-type: application/json\n\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      }; // Convert form data to string here ...\n\n      const body = JSON.stringify(form); // Insert data user for login process here ...\n\n      const response = await API.post('/login', body, config);\n      console.log(response.data.data); // Checking process\n\n      if ((response === null || response === void 0 ? void 0 : response.status) == 200) {\n        // Send data to useContext\n        dispatch({\n          type: \"LOGIN_SUCCESS\",\n          payload: response.data.data\n        }); // Status check\n\n        if (response.data.data.status == \"admin\") {\n          history.push(\"/complain-admin\");\n        } else {\n          history.push(\"/\");\n        }\n\n        const alert = /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"success\",\n          className: \"py-1\",\n          children: \"Login success\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this);\n\n        setMessage(alert);\n      }\n    } catch (error) {\n      const alert = /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        className: \"py-1\",\n        children: \"Login failed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this);\n\n      setMessage(alert);\n      console.log(error);\n    }\n  };\n\n  const navigasi = useNavigate();\n\n  const handleKlick = () => {\n    navigasi(\"/homesub\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    size: \"lg\",\n    centered: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: styleCss.form,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styleCss.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: styleCss.header,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styleCss.inputGroup,\n            name: \"email\",\n            value: true,\n            placeholder: \"Email\",\n            onChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: styleCss.inputGroup1,\n            id: \"password\",\n            placeholder: \"Password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleKlick,\n            className: styleCss.button,\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styleCss.text,\n            children: \"Don't have an account? Klik Here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPop, \"mO+fuHIAPPOiOligrI5VMPewHos=\", false, function () {\n  return [useHistory, useNavigate];\n});\n\n_c = LoginPop;\nexport default LoginPop;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPop\");","map":{"version":3,"sources":["D:/Dumbways/stage 2/z-project/client/src/components/signin.js"],"names":["styleCss","React","useState","useContext","Modal","useNavigate","useHistory","API","Alert","UserContext","LoginPop","props","history","state","dispatch","message","setMessage","form","setForm","email","password","handleChange","e","target","name","value","handleSubmit","preventDefault","config","headers","body","JSON","stringify","response","post","console","log","data","status","type","payload","push","alert","error","navigasi","handleKlick","formGroup","header","inputGroup","inputGroup1","button","text"],"mappings":"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","sourcesContent":["import styleCss from \"./popup.module.css\";\r\nimport React, {useState, useContext} from 'react';\r\nimport { Modal } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useNavigate, useHistory } from 'react-router-dom'\r\nimport { API } from '../config/api'\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { UserContext } from \"../contex/userContext\";\r\n\r\n\r\nfunction LoginPop(props) {\r\n    let history = useHistory();\r\n\r\n    const [state, dispatch] = useContext(UserContext);\r\n    const [message, setMessage] = useState(null);\r\n\r\n    // Store data with useState here ...\r\n    const [form, setForm] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const { email, password } = form;\r\n\r\n    const handleChange = (e) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n\r\n            // Create Configuration Content-type here ...\r\n            // Content-type: application/json\r\n            const config = {\r\n                headers: {\r\n                    \"Content-type\": \"application/json\"\r\n                }\r\n            }\r\n\r\n            // Convert form data to string here ...\r\n            const body = JSON.stringify(form)\r\n\r\n            // Insert data user for login process here ...\r\n            const response = await API.post('/login', body, config)\r\n            console.log(response.data.data)\r\n\r\n            // Checking process\r\n            if (response?.status == 200) {\r\n                // Send data to useContext\r\n                dispatch({\r\n                    type: \"LOGIN_SUCCESS\",\r\n                    payload: response.data.data,\r\n                });\r\n\r\n                // Status check\r\n                if (response.data.data.status == \"admin\") {\r\n                    history.push(\"/complain-admin\");\r\n                } else {\r\n                    history.push(\"/\");\r\n                }\r\n\r\n                const alert = (\r\n                    <Alert variant=\"success\" className=\"py-1\">\r\n                        Login success\r\n                    </Alert>\r\n                );\r\n                setMessage(alert);\r\n            }\r\n        } catch (error) {\r\n            const alert = (\r\n                <Alert variant=\"danger\" className=\"py-1\">\r\n                    Login failed\r\n                </Alert>\r\n            );\r\n            setMessage(alert);\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    const navigasi = useNavigate()\r\n    const handleKlick = () => {\r\n        navigasi(\"/homesub\")\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"lg\"\r\n            centered\r\n        >\r\n            <div>\r\n                <form onSubmit={handleSubmit} className={styleCss.form}>\r\n                    <div className={styleCss.formGroup}>\r\n                        <h1 className={styleCss.header}>Sign In</h1>\r\n                        <input\r\n                            className={styleCss.inputGroup}\r\n                            name=\"email\"\r\n                            value\r\n                            placeholder=\"Email\"\r\n                            onChange={handleChange}\r\n                            type=\"email\"\r\n                        />\r\n\r\n                        <input\r\n                            className={styleCss.inputGroup1}\r\n                            id=\"password\"\r\n                            placeholder=\"Password\"\r\n                            type=\"password\"\r\n                        />\r\n\r\n                        <button onClick={handleKlick} className={styleCss.button} >Sign In</button>\r\n                        <p className={styleCss.text}>Don't have an account? Klik Here</p>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default LoginPop;"]},"metadata":{},"sourceType":"module"}